service: gittron-api

frameworkVersion: ">=1.1.0 <2.0.0"

package:
  exclude:
    - test/**

provider:
  name: aws
  runtime: nodejs8.10
  region: us-east-1
  stage: dev
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}/index/*"

functions:
  initToken:
    handler: tokens/init-token.initToken
    events:
      - http:
          path: tokens/new
          method: post
          cors: true
  list:
    handler: tokens/list.list
    events:
      - http:
          path: tokens
          method: get
          cors: true
  get:
    handler: tokens/get.get
    events:
      - http:
          path: tokens/{ghid}/{tokenid}
          method: get
          cors: true
  getByRepo:
    handler: tokens/get-by-repo.getByRepo
    events:
      - http:
          path: tokens/repo/{ghid}
          method: get
          cors: true
  getByTokenId:
    handler: tokens/get-by-tokenid.getByTokenId
    events:
      - http:
          path: tokenid/{tokenid}
          method: get
          cors: true
  uri:
    handler: tokens/token-uri.tokenUri
    events:
      - http:
          path: uri/{tokenid}
          method: get
          cors: true
  generateSvg:
    handler: tokens/generate-svg.generateSvg
    events:
      - http:
          path: generatesvg
          method: post
          cors: true
  update:
    handler: tokens/update.update
    events:
      - http:
          path: tokens/{ghid}/{tokenid}
          method: put
          cors: true
  delete:
    handler: tokens/delete.delete
    events:
      - http:
          path: tokens/{ghid}/{tokenid}
          method: delete
          cors: true

resources:
  Resources:
    TokensDynamoDbTable:
      Type: "AWS::DynamoDB::Table"
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: ghid
            AttributeType: S
          - AttributeName: tokenId
            AttributeType: S
        KeySchema:
          - AttributeName: ghid
            KeyType: HASH
          - AttributeName: tokenId
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        GlobalSecondaryIndexes:
          - IndexName: byTokenId
            KeySchema:
              - AttributeName: tokenId
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
